// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: user.sql

package hike

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  first_name,
  last_name,
  age,
  emal,
  password,
  role
) VALUES (
  $1, $2, $3, $4, $5, $6
)
RETURNING id, first_name, last_name, age, emal, password, role, "createdAt", "updatedAt"
`

type CreateUserParams struct {
	FirstName string
	LastName  string
	Age       int32
	Emal      string
	Password  string
	Role      string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.FirstName,
		arg.LastName,
		arg.Age,
		arg.Emal,
		arg.Password,
		arg.Role,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Age,
		&i.Emal,
		&i.Password,
		&i.Role,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
